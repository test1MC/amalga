<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="12" MadCap:lastHeight="831.3334" MadCap:lastWidth="576" MadCap:fileTags="Personas.Mahesh: DI Specialist,TopicOwner.v-ccole,ReleaseTarget.CTP1,Status.70 - Complete,EditingTags.7 - Editing issues resolved" MadCap:conditions="Production.doNOTbuild,Region.US">
    <head>
        <MadCap:changeData>
            <MadCap:RemoveChange MadCap:userName="v-ciwyco" MadCap:initials="CJW" MadCap:id="1" MadCap:timestamp="2012-03-09T20:51:36.0578923-08:00" />
            <MadCap:AddChange MadCap:userName="v-ciwyco" MadCap:initials="CJW" MadCap:id="2" MadCap:timestamp="2012-03-09T20:52:10.0530169-08:00" />
        </MadCap:changeData>
        <link href="../Resources/Stylesheets/AmalgaMain.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1>Acquisition input</h1>
        <p class="PersonaDISpecialist">&#160;</p>
        <p>
            <MadCap:annotation MadCap:createDate="2012-03-09T21:15:58.2634781-08:00" MadCap:creator="v-ciwyco" MadCap:initials="CJW" MadCap:comment="see revision of fail-over below. That's the only change I made. " MadCap:editor="v-ciwyco" MadCap:editDate="2012-03-09T21:16:45.9483164-08:00">Acquisition</MadCap:annotation> input is the format in which a source system submits messages to the pipeline. Your configuration varies depending on the input format of the feed.</p>
        <p class="h7">File format to transport file-based messages, such as comma-separated value (CSV) format</p>
        <p>You must specify a feed name, feed type, and the source directory (with a search pattern) of the file.</p>
        <p class="h7">Minimal Lower Layer Protocol (MLLP) to transport HL7 messages</p>
        <p>You must specify a feed name, feed type, and unique port number.</p>
        <ul>
            <li>You can configure secondary storage as a backup storage to receive data when the connection to the MessageQueue.dbo.MSG201 table is not available. The subsystem manages migrating temporarily stored data into the MSG201 table after you restore the connection. In addition, the Acquisition subsystem provides <MadCap:change MadCap:changes="2">failover</MadCap:change><MadCap:change MadCap:changes="1">fail-over</MadCap:change> cluster (Active/Passive) mode for disaster recovery and failover.</li>
            <li>The receive adapter returns acknowledgement ACK and NACK messages for the HL7 feed. You have the following options for capturing, verifying, and returning acknowledgements:<ul><li>Supply an application plug-in with custom ACK, NACK, and verification logic. You must identify the URL and source type of the DLL. For details, see <MadCap:xref href="Manifest XML/DI_Con_AcquireExtend.htm" target="" title="" alt="">Acquisition extension</MadCap:xref>.</li><li>Use configuration elements within <span class="code">&lt;Setting Name=“FeedConfigurationXml” Type=”System.String”&gt;</span>. For a configuration implementation example, see <MadCap:xref href="DI_Xml_AcquireSrvMLLPEx.htm" target="" title="" alt="">Feed acquisition: service manifest example for MLLP format</MadCap:xref>. The following table shows the supporting elements for configuration-based acknowledgment.<p><table><col /><col /><tbody><tr><th>Element</th><th>Description</th></tr><tr><td>&lt;ackcapture&gt;</td><td><p>Defines the regular expression capture string that gets the different elements (substring between separator character “|”). In the manifest example, <span class="code">(?&amp;lt;tok0&amp;gt;[^|]*)</span> defines a capture element of <span class="code">(?&lt;tok0&gt;[^|]*)</span>. If the incoming message is <span class="code">“MSH|……”, &lt;tok0&gt;</span> will be equal to “MSH”.</p><p>For details for defining the capture string of a regular expression, see <a href="http://go.microsoft.com/fwlink?LinkID=230529">Regular Expression Classes</a><MadCap:conditionalText MadCap:conditions="Production.PrintOnly"> at <a href="http://go.microsoft.com/fwlink?LinkID=230529">http://go.microsoft.com/fwlink/?LinkID=230529</a></MadCap:conditionalText> or <a href="http://go.microsoft.com/fwlink?LinkID=230532">How to match a pattern by using regular expressions and Visual C#</a><MadCap:conditionalText MadCap:conditions="Production.PrintOnly"> at <a href="http://go.microsoft.com/fwlink?LinkID=230532">http://go.microsoft.com/fwlink/?LinkID=230532</a></MadCap:conditionalText>.</p></td></tr><tr><td>&lt;ackformular&gt;</td><td>Defines the acknowledgement string the adapter returns to the source system. In the example, the adapter replaces <span class="code">&lt;tok0&gt;</span>, <span class="code">&lt;tok1&gt;</span>, <span class="code">&lt;tok2&gt;</span>, and so on with the actual capture string obtained from the ackcapture elements.</td></tr><tr><td>&lt;nackcapture&gt;</td><td>Defines the NACK version of the <span class="MarkupLanguageElements">ackcapture</span> element and has similar usage.</td></tr><tr><td>&lt;nackformular&gt;</td><td>Defines the NACK version of the <span class="MarkupLanguageElements">ackformular</span> element and has similar usage.</td></tr><tr><td>&lt;defaultack&gt;</td><td>Specifies the acknowledgement bytes in case the <span class="MarkupLanguageElements">ackcapture</span> fails to match the message and is not able to create the ACK messages. If the ackcapture element fails to match the incoming message, and the message verification is successful, the adapter returns the default byte. Use a comma to separate different bytes settings.</td></tr><tr><td>&lt;defaultnack&gt;</td><td>Specifies the NACK version of the <span class="MarkupLanguageElements">defaultack</span> element and has a similar usage.</td></tr><tr><td><p>&lt;verifier&gt;</p></td><td><p>The verifier attribute uses the regular expression to verify the message pattern. If the specified regular expression successfully matches the message content, and you include the <span class="MarkupLanguageElements">ackcapture</span> and <span class="MarkupLanguageElements">ackformular</span> element values, then the subsystem creates an appropriate return acknowledgement message.</p><p class="Label">Example</p><p class="code">^MSH\|([^|\r\n]*\|){13,}.*\r\n</p></td></tr></tbody></table></p></li></ul></li>
        </ul>
        <p class="SeeAlso">See also</p>
        <p>
            <MadCap:xref href="DI_Con_AcquireSummary.htm" target="" title="" alt="" style="font-weight: normal;">Feed acquisition</MadCap:xref>
        </p>
        <p>
            <MadCap:xref href="DI_Con_AcquireOutput.htm" target="" title="" alt="">Acquisition output</MadCap:xref>
        </p>
    </body>
</html>