<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:fileTags="Personas.Elvis: App Dev,TopicOwner.v-dennk,TopicType.Overview/Introduction,ReleaseTarget.TAP,Status.60 - Revising,EditingTags.7 - Editing issues resolved,TopicOwner.v-ccole" MadCap:lastBlockDepth="4" MadCap:lastHeight="3114" MadCap:lastWidth="557">
    <head>
        <link href="../../Resources/Stylesheets/AmalgaMain.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1>Data Change Notification</h1>
        <p class="PersonaAppDev">&#160;</p>
        <p class="abstract">
            <MadCap:annotation MadCap:createDate="2011-11-17T11:20:38.5458262-08:00" MadCap:creator="v-ciwyco" MadCap:initials="CJW" MadCap:comment="Post Refresh:\r\nLong topic.  At the least, IMO you need some headings (diagram section and example section) that can be referenced at the beginnign of the topic, so it is easier for the reader to see what else is in your topic.  I added to the abstract to that effect also. " MadCap:editor="v-ciwyco" MadCap:editDate="2011-11-17T11:26:53.3560710-08:00">
                <MadCap:keyword term="Data Change Notification platform application;Change Data Capture;EventingManagerService service:Data Change Notification platform application;Data Change Notification platform application:EventingManagerService service;EventingDispatcherService service:Data Change Notification platform application;Data Change Notification platform application:EventingDispatcherService service;EventingWcfHandlerService service:Data Change Notification platform application;Data Change Notification platform application:EventingWcfHandlerService service;ChangeTrackerService service:Data Change Notification platform application;Data Change Notification platform application:ChangeTrackerService service;event types:Data Change Notification platform application;Data Change Notification platform application:event types;event subscriptions:Data Change Notification platform application;Data Change Notification platform application:event subscriptions;event messages:Data Change Notification platform application;Data Change Notification platform application:event messages" />This</MadCap:annotation> topic describes Data Change Notification, a hosted application included with <MadCap:variable name="BrandingHSG.Amalga Short" /> that <MadCap:annotation MadCap:createDate="2011-11-17T11:24:43.1932885-08:00" MadCap:creator="v-ciwyco" MadCap:initials="CJW" MadCap:comment="IMO, you could shortent this to:  &quot;that allows the application to notify users when specified data changes.&quot;  They get the mrchanics of how it works in the topic." MadCap:editor="v-ciwyco" MadCap:editDate="2011-11-17T11:26:33.6870710-08:00">provides a data-driven callback mechanism in which hosted applications can subscribe to, and receive notifications about, data changes in the underlying data structures for application views</MadCap:annotation>. This topic includes an architecture and data flow diagram, and has a descriptive example of the overall process.</p>
        <p>Data Change Notification (DCN), also known as eventing, provides a way for your applications and services to be notified if data changes. Data Change Notification functionality is provided by the Microsoft.Amalga.Event.Application application, which takes advantage of the Change Data Capture (CDC) functionality in <MadCap:variable name="BrandingMS.SQL Server 2008" /> to provide a data-driven callback mechanism that hosted applications can use to support workflow-driven clinical events.</p>
        <h2>Application architecture</h2>
        <p>The Microsoft.Amalga.Event.Application application contains the following hosted services:</p>
        <ul>
            <li>
                <p>EventingManagerService</p>
                <p>This hosted <MadCap:variable name="BrandingMS.Doors Communication Foundation (WCF) service" /> manages the event types and event subscriptions for hosted applications. The EventingManagerService service interacts with the <MadCap:variable name="BrandingHSG.Amalga Short" /> platform to validate that tables and views referenced by application views are compatible with Data Change Notification and can be tracked for data changes. </p>
                <p class="note">The EventingManagerService service has no access to data stored in clinical databases. The service only references the schema of clinical databases to ensure that CDC is enabled and that the data structures identified in DCN event types can be tracked by the ChangeTrackerService service.</p>
            </li>
            <li>
                <p>ChangeTrackerService</p>
                <p>This hosted <MadCap:variable name="BrandingMS.Doors service" /> handles the interaction between Change Data Capture (CDC), using the metadata for DCN event types to identify relevant change data events and queue DCN event messages in the DCN message queue maintained by the DCN application.</p>
                <p class="note">The ChangeTrackerService service has read-only access to data stored in clinical databases, and only for the purpose of tracking data change events with CDC. The service uses table-level functions provided by CDC to reference data change event information, and does not write data to clinical databases.</p>
            </li>
            <li>
                <p>EventingDispatcherService</p>
                <p>This hosted <MadCap:variable name="BrandingMS.WCF service" /> monitors the DCN message queue. When DCN event messages are queued, the EventingDispatcherService uses the metadata for DCN event subscriptions to dispatch DCN event messages to the appropriate destinations.</p>
            </li>
            <li>
                <p>EventingWcfHandlerService</p>
                <p>This hosted <MadCap:variable name="BrandingMS.WCF service" /> sends DCN event messages received from the EventingDispatcherService to the appropriate destination, using the delivery channel information provided in the DCN event subscription to call the service endpoint exposed by your hosted <MadCap:variable name="BrandingMS.WCF service" /> and pass the DCN event message.</p>
            </li>
        </ul>
        <p>The following diagram shows the architecture and data flow between your hosted application, the Microsoft.Amalga.Event.Application hosted application, and supporting features for Data Change Notification.</p>
        <p class="note">Typically, your hosted application will  interact only with the EventingManagerService and EventingWcfHandlerService services.</p>
        <p class="Figure">
            <img src="../Images/EventingArchitecture.png" style="width: 557px;height: 418px;" title="This is my Screen Tip" alt="This is my Alternate Text" />
        </p>
        <h2>Application data flow</h2>
        <p>First, your hosted application uses the EventingManagerService service to create and subscribe to a DCN event type. The service writes the DCN event type and event subscription to the read-write application views maintained by the DCN application for that purpose, after resolving the application views in the clinical database and confirming that the relevant underlying data structures have CDC enabled. For more information about enabling CDC on databases, tables, and views for use with DCN, see <MadCap:xref href="SDK_CON_Enabling_DCN.htm" target="" title="" alt="">Enabling DCN on page 1</MadCap:xref>. </p>
        <p class="caution">You cannot use data change notification unless both the database and the underlying data structures have CDC enabled. </p>
        <p class="caution">CDC can significantly increase the amount of data written to the transaction log and delay log truncation, increasing the risk of running out of disk space for the transaction log. When a full transaction log occurs, data can no longer be written to that database until user action is taken to make log space available. For more information about troubleshooting a full transaction log, see "<a href="http://go.microsoft.com/fwlink?LinkId=234807">Troubleshooting a Full Transaction Log (Error 9002)</a>"<MadCap:conditionalText MadCap:conditions="Production.PrintOnly"> on Microsoft Developer Network at http://go.microsoft.com/fwlink/?LinkId=234807</MadCap:conditionalText>.<br />To avoid filling the transaction log, do not enable CDC on databases or tables that are not being tracked by a corresponding DCN event type.</p>
        <p>The ChangeTrackerService service then gets the DCN event types and uses that information to periodically execute CDC table-value functions and retrieve any relevant changes. If relevant changes are retrieved, those changes are written to a DCN message queue, another read-write application view maintained by the DCN application.</p>
        <p class="tip">Typically, the Microsoft.Amalga.Event.Application application is configured to monitor data change events, tracked by CDC, on the write data server for an <MadCap:variable name="BrandingHSG.Amalga Short" /> topology. CDC can decrease performance on the write data server, particularly if replication is also configured for clinical databases on that server. If replication, particularly transactional replication, is configured for clinical databases, the best practice is to reconfigure Data Change Notification, as well as any hosted applications that use Data Change Notification functionality, to monitor data change events on the read data server, reducing performance impact on the write data server. </p>
        <p>If there are messages in the DCN message queue, the EventingDispatcherService service then retrieves the DCN event messages and DCN subscription information. If a DCN subscription corresponds with a queued DCN event message, then the service dispatches the DCN event message, along with the destination information, to the EventingWcfHandlerService service.</p>
        <p>Finally, the EventingWcfHandlerService service sends the DCN event message to the WCF service endpoint for your hosted application, specified when you subscribed to the DCN event type for that DCN event message.</p>
        <p>For example, you are building a hosted application to notify hospital staff about the availability of lab tests for patients monitored by a care provider. After defining a virtual schema, you create a hosted WCF service to receive lab test notifications. The WCF service creates and subscribes to a DCN event type for an <MadCap:variable name="BrandingHSG.Amalga Short" /> entity named Requested Observation by calling the EventingManagerService. When a data change which meets the requirements of the DCN event type occurs in the Requested Observation entity, the EventingWcfHandlerService sends a DCN event message describing the data change. At that point, your hosted application can then use its virtual schema to retrieve the actual lab report for the patient referenced in the DCN event message, render a copy of the lab report, and generate a link. Finally, your hosted application sends an email message containing the generated link, notifying the care provider.</p>
        <p>For more information about interacting with the services and functionality provided in the Microsoft.Amalga.Event.Application application, see <MadCap:xref href="SDK_CON_Interacting_DCN.htm" target="" title="" alt="">Interacting with Data Change Notification on page 1</MadCap:xref>.</p>
    </body>
</html>